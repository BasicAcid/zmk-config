/*
* Copyright (c) 2020 The ZMK Contributors
*

* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_french.h"

/ {
    keymap {
        compatible = "zmk,keymap";

        // Layer 0: ERGOL Base Layout (fixed bottom row)
        default_layer {
            display-name = "ERGOL";
            bindings = <
                // TOP ROW: Q C O P W | J M D ! Y ✅ (working correctly)
                &kp TAB    &kp A  &kp C  &kp O  &kp P  &kp Z      &kp J     &kp SEMI  &kp D  &kp SLASH  &kp Y  &kp BSPC

                // MIDDLE ROW (HOME ROW): A S E N F | L R T I U ✅ (working correctly)
                &kp LSHFT  &kp Q  &kp S  &kp E  &kp N  &kp F      &kp L     &kp R     &kp T  &kp I      &kp U  &kp RALT

                // BOTTOM ROW: Z X ? V B | : H G ; K (FIXED)
                // ? = Shift+M on AZERTY, : = DOT on AZERTY
                &kp LCTRL  &kp W  &kp X  &kp LS(M)  &kp V  &kp B      &kp DOT   &kp H     &kp G  &kp COMMA  &kp K  &kp ESC

                // THUMB KEYS
                                         &kp LGUI  &mo 1   &kp SPACE    &kp RET  &mo 2        &kp LALT
            >;
        };

        // Layer 1: Navigation & Function Keys (Orange "Nav" layer from image)
        nav_layer {
            display-name = "Nav";
            bindings = <
                // F-Keys row
                &kp F1      &kp F2  &kp F3  &kp F4  &kp F5  &kp F6     &kp F7     &kp F8    &kp F9    &kp F10    &kp F11   &kp F12

                // Navigation row
                &kp LSHIFT  &none   &none   &none   &none   &none      &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT  &kp HOME  &kp END

                // Additional navigation
                &kp LCTRL   &none   &none   &none   &none   &none      &kp PG_DN  &kp PG_UP &none     &none      &none     &mo 3

                // Thumb keys
                                            &kp LGUI  &trans  &kp SPACE  &kp RET    &trans    &kp LALT
            >;
        };

        // Layer 2: Numbers & Symbols (simplified for testing)
        symbols_layer {
            display-name = "Symbols";
            bindings = <
                // Numbers row (basic numbers for now)
                &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp N6         &kp N7       &kp N8       &kp N9      &kp N0       &kp MINUS    &kp EQUAL

                // Programming symbols (basic)
                &kp LSHIFT   &none        &none        &none        &none        &none          &kp LBKT     &kp RBKT     &kp SQT     &kp BSLH     &none        &trans

                // More symbols
                &kp LCTRL    &none        &none        &none        &none        &none          &kp GRAVE    &kp SEMI     &kp COMMA   &kp DOT      &kp SLASH    &mo 3

                // Thumb keys
                                                      &kp LGUI     &trans       &kp SPACE      &kp RET      &trans       &kp LALT
            >;
        };

        // Layer 3: Bluetooth & System (when both layer keys are held)
        system_layer {
            display-name = "System";
            bindings = <
                // Bluetooth controls
                &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none

                // System controls
                &none       &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none

                // Reset and bootloader
                &none       &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &bootloader

                // Thumb keys
                                                        &trans        &trans        &trans          &trans &trans &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        // Access system layer when both nav and symbols are active
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
